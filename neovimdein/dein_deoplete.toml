# Toml
[[plugins]]
repo  = 'cespare/vim-toml'

################
### Markdown ###
################
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown','mkd','md']

# quote内のプログラムをシンタックスハイライトする
[[plugins]]
repo = 'joker1007/vim-markdown-quote-syntax'
on_ft = ['markdown','mkd','md']

# 編集中のMarkdownファイルのプレビューを作成する
[[plugins]]
repo = 'kannokanno/previm'
on_ft = ['markdown','mkd','md']

# プレビューをブラウザで開いてくれる
[[plugins]]
repo = 'tyru/open-browser.vim'
on_ft = ['markdown','mkd','md']

# dein.vim command
[[plugins]]
repo = 'haya14busa/dein-command.vim'
on_cmd = 'Dein'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_i = 1
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#enable_ignore_case = 1
    let g:deoplete#enable_smart_case = 1

    " <TAB>: completion.
    imap <silent><expr> <TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : deoplete#mappings#manual_complete()
    function! s:check_back_space() abort
        let col = col('.') - 1
        return !col || getline('.')[col - 1]  =~ '\s'
    endfunction

    " <S-TAB>: completion back.
    inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"
'''

################
### python   ###
################
# for deoplete use jedi.
[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python','py']

# IDEの様なオムニ補完を提供してくれるプラグイン
[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python','py']
hook_source = '''
  let g:jedi#popup_on_dot = 0 " ドット(.)を入力したとき自動で補完しない(Ctrl+Space)
  let g:jedi#popup_select_first = 0 " 補完候補の1番目を選択しない
  let g:jedi#show_call_signatures = 1 " 関数の引数表示
  autocmd FileType python setlocal omnifunc=jedi#completions   " 補完エンジンはjediを使う
  autocmd FileType python setlocal completeopt-=preview        " ポップアップを表示しない
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  nnoremap [denite] <Nop>
  nmap <C-d> [denite]
  nnoremap <silent> [denite]g :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> [denite]r :<C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> [denite]p :<C-u>Denite file_rec<CR>
  call denite#custom#option('default', 'prompt', '>')
  call denite#custom#option('_', 'highlight_matched_range', 'None')
  call denite#custom#option('_', 'highlight_matched_char', 'None')
  call denite#custom#map('insert', "<Tab>", '<denite:move_to_next_line>')
  call denite#custom#map('insert', "<S-Tab>", '<denite:move_to_previous_line>')
  call denite#custom#map('insert', "<C-t>", '<denite:do_action:tabopen>')
  call denite#custom#map('insert', "<C-v>", '<denite:do_action:vsplit>')
  call denite#custom#map('normal', "v", '<denite:do_action:vsplit>')
  call denite#custom#var('grep', 'command', ['pt', '--follow', '--nogroup', '--nocolor', '--hidden'])
  call denite#custom#var('grep', 'default_opts', [])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('file_rec', 'command', ['pt', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
'''

